import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { motion } from 'framer-motion';
import SafeIcon from '../common/SafeIcon';
import * as FiIcons from 'react-icons/fi';

const { FiArrowLeft, FiChevronDown, FiChevronUp, FiMail, FiSave, FiCheck, FiClock } = FiIcons;

const checklistSections = [
  {
    id: 'open',
    title: 'Open/Shift Start Tasks',
    icon: '🌅',
    items: [
      'Check restroom supplies and cleanliness',
      'Wipe down all high-touch surfaces',
      'Clean entry doors and windows',
      'Empty and clean coffee station',
      'Check floor condition and spot clean',
      'Verify hand sanitizer levels'
    ]
  },
  {
    id: 'midshift',
    title: 'Mid-Shift Spot Checks',
    icon: '🔍',
    items: [
      'Clean pin pads after busy periods',
      'Wipe spills immediately',
      'Check restroom every 2 hours',
      'Empty trash when 2/3 full',
      'Clean cooler door handles',
      'Straighten and dust shelves'
    ]
  },
  {
    id: 'endday',
    title: 'End of Day Reset',
    icon: '🌙',
    items: [
      'Deep clean all surfaces',
      'Mop entire floor area',
      'Clean and sanitize food prep areas',
      'Empty all trash receptacles',
      'Wipe down exterior windows',
      'Stock cleaning supplies for next shift'
    ]
  },
  {
    id: 'restroom',
    title: 'Restroom Deep Check',
    icon: '🚿',
    items: [
      'Clean and disinfect all surfaces',
      'Restock toilet paper and towels',
      'Check and refill soap dispensers',
      'Clean mirrors and fixtures',
      'Mop floor with disinfectant',
      'Empty trash and replace liner'
    ]
  }
];

function Checklist({ checkedItems, setCheckedItems }) {
  const navigate = useNavigate();
  const [expandedSections, setExpandedSections] = useState({});
  const [showShareOptions, setShowShareOptions] = useState(false);

  const toggleSection = (sectionId) => {
    setExpandedSections(prev => ({
      ...prev,
      [sectionId]: !prev[sectionId]
    }));
  };

  const toggleItem = (sectionId, itemIndex) => {
    const itemKey = `${sectionId}-${itemIndex}`;
    setCheckedItems(prev => ({
      ...prev,
      [itemKey]: !prev[itemKey]
    }));
  };

  const getCompletionStats = () => {
    const totalItems = checklistSections.reduce((sum, section) => sum + section.items.length, 0);
    const completedItems = Object.values(checkedItems).filter(Boolean).length;
    return { completed: completedItems, total: totalItems, percentage: Math.round((completedItems / totalItems) * 100) };
  };

  const generateChecklistText = () => {
    let text = "Clean Store Champion - Daily Checklist\n\n";
    
    checklistSections.forEach(section => {
      text += `${section.icon} ${section.title}\n`;
      section.items.forEach((item, index) => {
        const itemKey = `${section.id}-${index}`;
        const checked = checkedItems[itemKey] ? '✅' : '⬜';
        text += `${checked} ${item}\n`;
      });
      text += '\n';
    });
    
    const stats = getCompletionStats();
    text += `Progress: ${stats.completed}/${stats.total} items completed (${stats.percentage}%)\n\n`;
    text += "Generated by Clean Store Champion app";
    
    return text;
  };

  const emailChecklist = () => {
    const subject = encodeURIComponent('My Clean Store Checklist');
    const body = encodeURIComponent(generateChecklistText());
    window.open(`mailto:?subject=${subject}&body=${body}`);
  };

  const saveToNotes = () => {
    const text = generateChecklistText();
    navigator.clipboard.writeText(text).then(() => {
      alert('Checklist copied to clipboard!');
    });
  };

  const stats = getCompletionStats();

  return (
    <div className="min-h-screen bg-gray-50">
      {/* Header */}
      <div className="bg-white shadow-sm p-4 sticky top-0 z-10">
        <div className="flex items-center justify-between max-w-md mx-auto">
          <button 
            onClick={() => navigate('/')}
            className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <SafeIcon icon={FiArrowLeft} className="text-xl text-gray-600" />
          </button>
          <div className="text-center">
            <h1 className="text-lg font-semibold text-gray-800">Daily Clean Checklist</h1>
            <div className="text-sm text-gray-500">{stats.completed}/{stats.total} completed</div>
          </div>
          <button 
            onClick={() => setShowShareOptions(!showShareOptions)}
            className="p-2 hover:bg-gray-100 rounded-lg transition-colors"
          >
            <SafeIcon icon={FiSave} className="text-xl text-gray-600" />
          </button>
        </div>

        {/* Progress Bar */}
        <div className="max-w-md mx-auto mt-3">
          <div className="w-full bg-gray-200 rounded-full h-2">
            <motion.div
              className="h-2 bg-gradient-to-r from-blue-500 to-green-500 rounded-full"
              initial={{ width: 0 }}
              animate={{ width: `${stats.percentage}%` }}
              transition={{ duration: 0.5 }}
            />
          </div>
        </div>

        {/* Share Options */}
        {showShareOptions && (
          <motion.div
            initial={{ opacity: 0, y: -10 }}
            animate={{ opacity: 1, y: 0 }}
            className="max-w-md mx-auto mt-3 bg-gray-50 rounded-lg p-3"
          >
            <div className="flex space-x-2">
              <button
                onClick={emailChecklist}
                className="flex-1 bg-blue-500 text-white py-2 px-3 rounded-lg text-sm font-medium flex items-center justify-center space-x-1"
              >
                <SafeIcon icon={FiMail} className="text-sm" />
                <span>Email</span>
              </button>
              <button
                onClick={saveToNotes}
                className="flex-1 bg-green-500 text-white py-2 px-3 rounded-lg text-sm font-medium flex items-center justify-center space-x-1"
              >
                <SafeIcon icon={FiSave} className="text-sm" />
                <span>Copy</span>
              </button>
            </div>
          </motion.div>
        )}
      </div>

      {/* Checklist Content */}
      <div className="p-4 pb-20">
        <div className="max-w-md mx-auto space-y-4">
          {checklistSections.map((section, sectionIndex) => (
            <motion.div
              key={section.id}
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ delay: sectionIndex * 0.1 }}
              className="bg-white rounded-xl shadow-sm overflow-hidden"
            >
              {/* Section Header */}
              <button
                onClick={() => toggleSection(section.id)}
                className="w-full p-4 text-left flex items-center justify-between hover:bg-gray-50 transition-colors"
              >
                <div className="flex items-center space-x-3">
                  <span className="text-2xl">{section.icon}</span>
                  <div>
                    <h3 className="font-semibold text-gray-800">{section.title}</h3>
                    <div className="text-sm text-gray-500">
                      {section.items.filter((_, index) => checkedItems[`${section.id}-${index}`]).length}/{section.items.length} completed
                    </div>
                  </div>
                </div>
                <SafeIcon 
                  icon={expandedSections[section.id] ? FiChevronUp : FiChevronDown} 
                  className="text-gray-400" 
                />
              </button>

              {/* Section Items */}
              {expandedSections[section.id] && (
                <motion.div
                  initial={{ opacity: 0, height: 0 }}
                  animate={{ opacity: 1, height: 'auto' }}
                  exit={{ opacity: 0, height: 0 }}
                  className="border-t border-gray-100"
                >
                  <div className="p-4 space-y-3">
                    {section.items.map((item, itemIndex) => {
                      const itemKey = `${section.id}-${itemIndex}`;
                      const isChecked = checkedItems[itemKey];
                      
                      return (
                        <motion.div
                          key={itemIndex}
                          whileHover={{ scale: 1.01 }}
                          whileTap={{ scale: 0.99 }}
                          className={`flex items-center space-x-3 p-3 rounded-lg cursor-pointer transition-all duration-200 ${
                            isChecked ? 'bg-green-50 border border-green-200' : 'bg-gray-50 hover:bg-gray-100'
                          }`}
                          onClick={() => toggleItem(section.id, itemIndex)}
                        >
                          <div className={`w-6 h-6 rounded-full border-2 flex items-center justify-center transition-all duration-200 ${
                            isChecked 
                              ? 'bg-green-500 border-green-500' 
                              : 'border-gray-300 hover:border-gray-400'
                          }`}>
                            {isChecked && <SafeIcon icon={FiCheck} className="text-white text-sm" />}
                          </div>
                          <span className={`flex-1 transition-all duration-200 ${
                            isChecked ? 'text-green-700 line-through' : 'text-gray-700'
                          }`}>
                            {item}
                          </span>
                          {isChecked && (
                            <SafeIcon icon={FiClock} className="text-green-500 text-sm" />
                          )}
                        </motion.div>
                      );
                    })}
                  </div>
                </motion.div>
              )}
            </motion.div>
          ))}

          {/* Completion Message */}
          {stats.percentage === 100 && (
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              className="bg-gradient-to-r from-green-500 to-green-600 text-white p-6 rounded-xl text-center"
            >
              <div className="text-4xl mb-2">🎉</div>
              <h3 className="text-xl font-bold mb-2">Checklist Complete!</h3>
              <p className="text-green-100">You're a Clean Store Champion today!</p>
            </motion.div>
          )}

          {/* Tips */}
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ delay: 0.5 }}
            className="bg-blue-50 border border-blue-200 rounded-xl p-4"
          >
            <h4 className="font-semibold text-blue-800 mb-2">💡 Pro Tips</h4>
            <ul className="text-sm text-blue-700 space-y-1">
              <li>• Check off items as you complete them throughout your shift</li>
              <li>• Use the email feature to share progress with your manager</li>
              <li>• Reset daily for a fresh start</li>
            </ul>
          </motion.div>
        </div>
      </div>

      {/* Bottom Navigation */}
      <div className="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 p-4">
        <div className="max-w-md mx-auto">
          <button
            onClick={() => navigate('/quiz')}
            className="w-full bg-blue-500 text-white font-semibold py-3 px-6 rounded-xl hover:bg-blue-600 transition-all duration-200"
          >
            Take Assessment Quiz
          </button>
        </div>
      </div>
    </div>
  );
}

export default Checklist;